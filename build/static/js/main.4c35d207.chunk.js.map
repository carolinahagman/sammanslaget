{"version":3,"sources":["assets/images/BrokenHeart1.svg","assets/images/BrokenHeart2.svg","assets/images/Heart.svg","components/LoadingScreen.js","components/UnityWeb.js","App.js","reportWebVitals.js","index.js"],"names":["LoadingScreen","useState","loading","setLoading","showWholeHeart","setShowWholeHeart","useEffect","setTimeout","src","heart","className","brokenHeart1","brokenHeart2","unityContext","UnityContext","loaderUrl","dataUrl","frameworkUrl","codeUrl","UnityWeb","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAAe,G,MAAA,IAA0B,0CCA1B,MAA0B,yCCA1B,MAA0B,kC,OCwC1BA,EAnCO,WACpB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4CF,oBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAUA,OATAC,qBAAU,WACJJ,GACFK,YAAW,WACTJ,GAAW,GACXI,YAAW,WACTF,GAAkB,KACjB,QACF,QAGL,8BACGD,EACC,qBAAKI,IAAKC,EAAOC,UAAU,mBAE3B,qCACE,qBACEF,IAAKG,EACLD,UAAS,2BACPR,EAAU,2BAA6B,4BAG3C,qBACEM,IAAKI,EACLF,UAAS,2BACPR,EAAU,4BAA8B,mC,gBC7BhDW,EAAe,IAAIC,eAAa,CACpCC,UAAW,mDACXC,QAAS,8CACTC,aAAc,sDACdC,QAAS,gDAMIC,EAHE,WACf,OAAO,cAAC,IAAD,CAAOT,UAAU,QAAQG,aAAcA,KCgBjCO,MAtBf,WACE,MAA8BnB,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAG,qBAAU,WACJJ,GACFK,YAAW,WACTJ,GAAW,KACV,QAGL,qBAAKO,UAAU,MAAf,SACGR,EACC,cAAC,EAAD,IAEA,8BACE,cAAC,EAAD,SCRKmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4c35d207.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/BrokenHeart1.793b11eb.svg\";","export default __webpack_public_path__ + \"static/media/BrokenHeart2.cb3fa452.svg\";","export default __webpack_public_path__ + \"static/media/Heart.5b7e24f6.svg\";","import React, { useEffect, useState } from \"react\";\nimport brokenHeart1 from \"../assets/images/BrokenHeart1.svg\";\nimport brokenHeart2 from \"../assets/images/BrokenHeart2.svg\";\nimport heart from \"../assets/images/Heart.svg\";\n\nconst LoadingScreen = () => {\n  const [loading, setLoading] = useState(true);\n  const [showWholeHeart, setShowWholeHeart] = useState(false);\n  useEffect(() => {\n    if (loading)\n      setTimeout(() => {\n        setLoading(false);\n        setTimeout(() => {\n          setShowWholeHeart(true);\n        }, 2500);\n      }, 500);\n  });\n  return (\n    <div>\n      {showWholeHeart ? (\n        <img src={heart} className=\"pulsatingHeart\"></img>\n      ) : (\n        <>\n          <img\n            src={brokenHeart1}\n            className={`transitionHearts ${\n              loading ? \"initialLeftHeartPosition\" : \"finalLeftHeartPosition\"\n            }`}\n          ></img>\n          <img\n            src={brokenHeart2}\n            className={`transitionHearts ${\n              loading ? \"initialRightHeartPosition\" : \"finalRightHeartPosition\"\n            }`}\n          ></img>\n        </>\n      )}\n    </div>\n  );\n};\nexport default LoadingScreen;\n","import React from \"react\";\nimport Unity, { UnityContext } from \"react-unity-webgl\";\n\nconst unityContext = new UnityContext({\n  loaderUrl: \"./UnityAssets/Build/WebGLCompleteBuild.loader.js\",\n  dataUrl: \"./UnityAssets/Build/WebGLCompleteBuild.data\",\n  frameworkUrl: \"./UnityAssets/Build/WebGLCompleteBuild.framework.js\",\n  codeUrl: \"./UnityAssets/Build/WebGLCompleteBuild.wasm\",\n});\n\nconst UnityWeb = () => {\n  return <Unity className=\"unity\" unityContext={unityContext} />;\n};\nexport default UnityWeb;\n","import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport LoadingScreen from \"./components/LoadingScreen\";\nimport UnityWeb from \"./components/UnityWeb\";\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (loading)\n      setTimeout(() => {\n        setLoading(false);\n      }, 10000);\n  });\n  return (\n    <div className=\"App\">\n      {loading ? (\n        <LoadingScreen />\n      ) : (\n        <div>\n          <UnityWeb />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}